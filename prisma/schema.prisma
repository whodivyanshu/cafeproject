generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             Int        @id @default(autoincrement())
  name           String
  priceRangeUp   Int?
  priceRangeDown Int?
  rating         Float?
  image          String?
  tag            String?
  categories     Category[]
}

model MenuItem {
  id           Int        @id @default(autoincrement())
  name         String
  description  String
  price        Float
  image        String?
  veg          Boolean
  customisable Boolean
  category     Category   @relation(fields: [categoryId], references: [id])
  optionType   OptionType[]
  categoryId   Int
  orderItems   OrderItem[]
}
model Category {
  id           Int        @id @default(autoincrement())
  name         String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  items        MenuItem[]
  restaurantId Int
}

model Option {
  id           Int        @id @default(autoincrement())
  name         String
  price        Float
  optionType   OptionType @relation(fields: [optionTypeId], references: [id])
  optionTypeId Int
}

model OptionType {
  id      Int      @id @default(autoincrement())
  name    String
 menuItem     MenuItem   @relation(fields: [menuItemId], references: [id])
 required    Boolean    @default(false)
  multiSelect Boolean    @default(false)
  menuItemId   Int
  options Option[]
}


model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  name         String
  phone        String
  role         String
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Order {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  items      OrderItem[]
  paymentMethod String
  restaurantId Int
  total      Float
  status     String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model OrderItem {
  id           Int        @id @default(autoincrement())
  order        Order      @relation(fields: [orderId], references: [id])
  orderId      Int
  menuItem     MenuItem   @relation(fields: [menuItemId], references: [id])
  menuItemId   Int
  quantity     Int
  total        Float
}